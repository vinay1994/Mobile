<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite ignored="1" hostname="sureshs" failures="0" tests="6" name="TestCases" time="1.658" errors="0" timestamp="07 Feb 2019 05:58:03 GMT">
  <testcase classname="com.fliplearn.flipapp.helper.Base" name="@BeforeMethod befo" time="1.533">
    <failure type="org.openqa.selenium.WebDriverException" message="Connection refused: connect
Build info: version: &amp;apos;3.141.59&amp;apos;, revision: &amp;apos;e82be7d358&amp;apos;, time: &amp;apos;2018-11-14T08:17:03&amp;apos;
System info: host: &amp;apos;SURESHS&amp;apos;, ip: &amp;apos;10.8.0.34&amp;apos;, os.name: &amp;apos;Windows 10&amp;apos;, os.arch: &amp;apos;amd64&amp;apos;, os.version: &amp;apos;10.0&amp;apos;, java.version: &amp;apos;10.0.2&amp;apos;
Driver info: driver.version: AndroidDriver">
      <![CDATA[org.openqa.selenium.WebDriverException: Connection refused: connect
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'SURESHS', ip: '10.8.0.34', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '10.0.2'
Driver info: driver.version: AndroidDriver
at io.appium.java_client.remote.AppiumCommandExecutor.lambda$5(AppiumCommandExecutor.java:251)
at java.base/java.util.Optional.orElseGet(Optional.java:358)
at io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:250)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)
at io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)
at io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)
at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:213)
at org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:131)
at io.appium.java_client.DefaultGenericMobileDriver.<init>(DefaultGenericMobileDriver.java:38)
at io.appium.java_client.AppiumDriver.<init>(AppiumDriver.java:84)
at io.appium.java_client.AppiumDriver.<init>(AppiumDriver.java:94)
at io.appium.java_client.android.AndroidDriver.<init>(AndroidDriver.java:95)
at com.fliplearn.flipapp.helper.Base.setDriver(Base.java:128)
at com.fliplearn.flipapp.helper.Base.befo(Base.java:278)
Caused by: java.net.ConnectException: Connection refused: connect
at java.base/java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
at java.base/java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
at java.base/java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:400)
at java.base/java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:241)
at java.base/java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:225)
at java.base/java.net.PlainSocketImpl.connect(PlainSocketImpl.java:148)
at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:402)
at java.base/java.net.Socket.connect(Socket.java:591)
at okhttp3.internal.platform.Platform.connectSocket(Platform.java:129)
at okhttp3.internal.connection.RealConnection.connectSocket(RealConnection.java:245)
at okhttp3.internal.connection.RealConnection.connect(RealConnection.java:165)
at okhttp3.internal.connection.StreamAllocation.findConnection(StreamAllocation.java:257)
at okhttp3.internal.connection.StreamAllocation.findHealthyConnection(StreamAllocation.java:135)
at okhttp3.internal.connection.StreamAllocation.newStream(StreamAllocation.java:114)
at okhttp3.internal.connection.ConnectInterceptor.intercept(ConnectInterceptor.java:42)
at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)
at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121)
at okhttp3.internal.cache.CacheInterceptor.intercept(CacheInterceptor.java:93)
at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)
at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121)
at okhttp3.internal.http.BridgeInterceptor.intercept(BridgeInterceptor.java:93)
at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)
at okhttp3.internal.http.RetryAndFollowUpInterceptor.intercept(RetryAndFollowUpInterceptor.java:126)
at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)
at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121)
at okhttp3.RealCall.getResponseWithInterceptorChain(RealCall.java:200)
at okhttp3.RealCall.execute(RealCall.java:77)
at org.openqa.selenium.remote.internal.OkHttpClient.execute(OkHttpClient.java:103)
at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:105)
at io.appium.java_client.remote.AppiumCommandExecutor$1.createSession(AppiumCommandExecutor.java:186)
at io.appium.java_client.remote.AppiumCommandExecutor.createSession(AppiumCommandExecutor.java:217)
at io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:239)
... 40 more
... Removed 32 stack frames]]>
    </failure>
  </testcase> <!-- @BeforeMethod befo -->
  <testcase classname="com.fliplearn.flipapp.testcases.Login" name="@BeforeMethod befMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod befMethod -->
  <testcase classname="com.fliplearn.flipapp.helper.Base" name="@AfterMethod getResult" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod getResult -->
  <testcase classname="com.fliplearn.flipapp.helper.Base" name="@BeforeMethod befo" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod befo -->
  <testcase classname="com.fliplearn.flipapp.testcases.Login" name="@BeforeMethod befMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod befMethod -->
  <testcase classname="com.fliplearn.flipapp.helper.Base" name="@AfterMethod getResult" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod getResult -->
  <testcase classname="com.fliplearn.flipapp.helper.Base" name="@BeforeMethod befo" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod befo -->
  <testcase classname="com.fliplearn.flipapp.testcases.Login" name="@BeforeMethod befMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod befMethod -->
  <testcase classname="com.fliplearn.flipapp.helper.Base" name="@AfterMethod getResult" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod getResult -->
  <testcase classname="com.fliplearn.flipapp.helper.Base" name="@BeforeMethod befo" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod befo -->
  <testcase classname="com.fliplearn.flipapp.testcases.Login" name="@BeforeMethod befMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod befMethod -->
  <testcase classname="com.fliplearn.flipapp.helper.Base" name="@AfterMethod getResult" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod getResult -->
  <testcase classname="com.fliplearn.flipapp.helper.Base" name="@BeforeMethod befo" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod befo -->
  <testcase classname="com.fliplearn.flipapp.testcases.Login" name="@BeforeMethod befMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod befMethod -->
  <testcase classname="com.fliplearn.flipapp.helper.Base" name="@AfterMethod getResult" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod getResult -->
  <testcase classname="com.fliplearn.flipapp.helper.Base" name="@BeforeMethod befo" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod befo -->
  <testcase classname="com.fliplearn.flipapp.testcases.Login" name="@BeforeMethod befMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod befMethod -->
  <testcase classname="com.fliplearn.flipapp.helper.Base" name="@AfterMethod getResult" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod getResult -->
  <testcase classname="com.fliplearn.flipapp.testcases.Login" name="verifyLogin" time="0.0">
    <skipped/>
  </testcase> <!-- verifyLogin -->
  <testcase classname="com.fliplearn.flipapp.testcases.Login" name="verifyLogin" time="0.0">
    <skipped/>
  </testcase> <!-- verifyLogin -->
  <testcase classname="com.fliplearn.flipapp.testcases.Login" name="verifyLogin" time="0.0">
    <skipped/>
  </testcase> <!-- verifyLogin -->
  <testcase classname="com.fliplearn.flipapp.testcases.Login" name="verifyLogin" time="0.0">
    <skipped/>
  </testcase> <!-- verifyLogin -->
  <testcase classname="com.fliplearn.flipapp.testcases.Login" name="verifyLogin" time="0.0">
    <skipped/>
  </testcase> <!-- verifyLogin -->
  <testcase classname="com.fliplearn.flipapp.testcases.Login" name="verifyLogin" time="0.0">
    <skipped/>
  </testcase> <!-- verifyLogin -->
  <testcase classname="com.fliplearn.flipapp.testcases.Login" name="verifyLogout" time="0.0">
    <ignored/>
  </testcase> <!-- verifyLogout -->
</testsuite> <!-- TestCases -->
