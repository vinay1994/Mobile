<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite ignored="2" hostname="ip-10-0-22-18.ap-south-1.compute.internal" failures="0" tests="6" name="Login and My Profile" time="0.194" errors="0" timestamp="20 Jun 2019 07:22:16 GMT">
  <testcase classname="com.fliplearn.flipapp.helper.Base" name="@BeforeMethod befo" time="0.076">
    <failure type="java.lang.IllegalStateException" message="The driver is not executable: /Users/tarungoswami/git/flip-app/FlipApp/drivers/chromedriverm">
      <![CDATA[java.lang.IllegalStateException: The driver is not executable: /Users/tarungoswami/git/flip-app/FlipApp/drivers/chromedriverm
at com.google.common.base.Preconditions.checkState(Preconditions.java:585)
at org.openqa.selenium.remote.service.DriverService.checkExecutable(DriverService.java:150)
at org.openqa.selenium.remote.service.DriverService.findExecutable(DriverService.java:141)
at org.openqa.selenium.chrome.ChromeDriverService.access$000(ChromeDriverService.java:35)
at org.openqa.selenium.chrome.ChromeDriverService$Builder.findDefaultExecutable(ChromeDriverService.java:159)
at org.openqa.selenium.remote.service.DriverService$Builder.build(DriverService.java:355)
at org.openqa.selenium.chrome.ChromeDriverService.createDefaultService(ChromeDriverService.java:94)
at org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:123)
at com.fliplearn.flipapp.helper.Base.setDriver(Base.java:220)
at com.fliplearn.flipapp.helper.Base.befo(Base.java:295)
... Removed 28 stack frames]]>
    </failure>
  </testcase> <!-- @BeforeMethod befo -->
  <testcase classname="com.fliplearn.flipapp.testcases.Login" name="@BeforeMethod befMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod befMethod -->
  <testcase classname="com.fliplearn.flipapp.helper.Base" name="@AfterMethod getResult" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod getResult -->
  <testcase classname="com.fliplearn.flipapp.helper.Base" name="@BeforeMethod befo" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod befo -->
  <testcase classname="com.fliplearn.flipapp.testcases.Login" name="@BeforeMethod befMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod befMethod -->
  <testcase classname="com.fliplearn.flipapp.helper.Base" name="@AfterMethod getResult" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod getResult -->
  <testcase classname="com.fliplearn.flipapp.helper.Base" name="@BeforeMethod befo" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod befo -->
  <testcase classname="com.fliplearn.flipapp.testcases.Login" name="@BeforeMethod befMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod befMethod -->
  <testcase classname="com.fliplearn.flipapp.helper.Base" name="@AfterMethod getResult" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod getResult -->
  <testcase classname="com.fliplearn.flipapp.helper.Base" name="@BeforeMethod befo" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod befo -->
  <testcase classname="com.fliplearn.flipapp.testcases.Login" name="@BeforeMethod befMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod befMethod -->
  <testcase classname="com.fliplearn.flipapp.helper.Base" name="@AfterMethod getResult" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod getResult -->
  <testcase classname="com.fliplearn.flipapp.helper.Base" name="@BeforeMethod befo" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod befo -->
  <testcase classname="com.fliplearn.flipapp.testcases.Login" name="@BeforeMethod befMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod befMethod -->
  <testcase classname="com.fliplearn.flipapp.helper.Base" name="@AfterMethod getResult" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod getResult -->
  <testcase classname="com.fliplearn.flipapp.helper.Base" name="@BeforeMethod befo" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod befo -->
  <testcase classname="com.fliplearn.flipapp.testcases.Login" name="@BeforeMethod befMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod befMethod -->
  <testcase classname="com.fliplearn.flipapp.helper.Base" name="@AfterMethod getResult" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod getResult -->
  <testcase classname="com.fliplearn.flipapp.testcases.Login" name="registration" time="0.0">
    <skipped/>
  </testcase> <!-- registration -->
  <testcase classname="com.fliplearn.flipapp.testcases.Login" name="registration" time="0.0">
    <skipped/>
  </testcase> <!-- registration -->
  <testcase classname="com.fliplearn.flipapp.testcases.Login" name="registration" time="0.0">
    <skipped/>
  </testcase> <!-- registration -->
  <testcase classname="com.fliplearn.flipapp.testcases.Login" name="registration" time="0.0">
    <skipped/>
  </testcase> <!-- registration -->
  <testcase classname="com.fliplearn.flipapp.testcases.Login" name="registration" time="0.0">
    <skipped/>
  </testcase> <!-- registration -->
  <testcase classname="com.fliplearn.flipapp.testcases.Login" name="registration" time="0.0">
    <skipped/>
  </testcase> <!-- registration -->
  <testcase classname="com.fliplearn.flipapp.testcases.Login" name="verifyLogin" time="0.0">
    <ignored/>
  </testcase> <!-- verifyLogin -->
  <testcase classname="com.fliplearn.flipapp.testcases.Login" name="verifyLogout" time="0.0">
    <ignored/>
  </testcase> <!-- verifyLogout -->
</testsuite> <!-- Login and My Profile -->
