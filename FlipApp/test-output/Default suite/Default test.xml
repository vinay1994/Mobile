<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite ignored="0" hostname="ip-10-0-22-18.ap-south-1.compute.internal" failures="0" tests="18" name="Default test" time="20.507" errors="0" timestamp="20 Jun 2019 07:21:12 GMT">
  <testcase classname="com.fliplearn.flipapp.helper.Base" name="@BeforeMethod befo" time="20.251">
    <failure type="org.openqa.selenium.WebDriverException" message="Timed out waiting for driver server to start.
Build info: version: &amp;apos;3.141.59&amp;apos;, revision: &amp;apos;e82be7d358&amp;apos;, time: &amp;apos;2018-11-14T08:17:03&amp;apos;
System info: host: &amp;apos;ip-10-0-22-18.ap-south-1.compute.internal&amp;apos;, ip: &amp;apos;fe80:0:0:0:4b8:f1fa:5e66:86ba%en0&amp;apos;, os.name: &amp;apos;Mac OS X&amp;apos;, os.arch: &amp;apos;x86_64&amp;apos;, os.version: &amp;apos;10.14.5&amp;apos;, java.version: &amp;apos;11.0.1&amp;apos;
Driver info: driver.version: ChromeDriver">
      <![CDATA[org.openqa.selenium.WebDriverException: Timed out waiting for driver server to start.
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'ip-10-0-22-18.ap-south-1.compute.internal', ip: 'fe80:0:0:0:4b8:f1fa:5e66:86ba%en0', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.14.5', java.version: '11.0.1'
Driver info: driver.version: ChromeDriver
at org.openqa.selenium.remote.service.DriverService.waitUntilAvailable(DriverService.java:202)
at org.openqa.selenium.remote.service.DriverService.start(DriverService.java:188)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:79)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:213)
at org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:131)
at org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:181)
at org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:168)
at org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:123)
at com.fliplearn.flipapp.helper.Base.setDriver(Base.java:179)
at com.fliplearn.flipapp.helper.Base.befo(Base.java:295)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:59)
at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:458)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:222)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:523)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
Caused by: org.openqa.selenium.net.UrlChecker$TimeoutException: Timed out waiting for [http://localhost:37450/status] to be available after 20008 ms
at org.openqa.selenium.net.UrlChecker.waitUntilAvailable(UrlChecker.java:100)
at org.openqa.selenium.remote.service.DriverService.waitUntilAvailable(DriverService.java:197)
... 38 more
Caused by: java.util.concurrent.TimeoutException
at java.base/java.util.concurrent.FutureTask.get(FutureTask.java:204)
at com.google.common.util.concurrent.SimpleTimeLimiter.callWithTimeout(SimpleTimeLimiter.java:156)
at org.openqa.selenium.net.UrlChecker.waitUntilAvailable(UrlChecker.java:75)
... 39 more
]]>
    </failure>
  </testcase> <!-- @BeforeMethod befo -->
  <testcase classname="com.fliplearn.flipapp.testcases.Login" name="@BeforeMethod befMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod befMethod -->
  <testcase classname="com.fliplearn.flipapp.helper.Base" name="@AfterMethod getResult" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod getResult -->
  <testcase classname="com.fliplearn.flipapp.helper.Base" name="@BeforeMethod befo" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod befo -->
  <testcase classname="com.fliplearn.flipapp.testcases.Login" name="@BeforeMethod befMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod befMethod -->
  <testcase classname="com.fliplearn.flipapp.helper.Base" name="@AfterMethod getResult" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod getResult -->
  <testcase classname="com.fliplearn.flipapp.helper.Base" name="@BeforeMethod befo" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod befo -->
  <testcase classname="com.fliplearn.flipapp.testcases.Login" name="@BeforeMethod befMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod befMethod -->
  <testcase classname="com.fliplearn.flipapp.helper.Base" name="@AfterMethod getResult" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod getResult -->
  <testcase classname="com.fliplearn.flipapp.helper.Base" name="@BeforeMethod befo" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod befo -->
  <testcase classname="com.fliplearn.flipapp.testcases.Login" name="@BeforeMethod befMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod befMethod -->
  <testcase classname="com.fliplearn.flipapp.helper.Base" name="@AfterMethod getResult" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod getResult -->
  <testcase classname="com.fliplearn.flipapp.helper.Base" name="@BeforeMethod befo" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod befo -->
  <testcase classname="com.fliplearn.flipapp.testcases.Login" name="@BeforeMethod befMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod befMethod -->
  <testcase classname="com.fliplearn.flipapp.helper.Base" name="@AfterMethod getResult" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod getResult -->
  <testcase classname="com.fliplearn.flipapp.helper.Base" name="@BeforeMethod befo" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod befo -->
  <testcase classname="com.fliplearn.flipapp.testcases.Login" name="@BeforeMethod befMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod befMethod -->
  <testcase classname="com.fliplearn.flipapp.helper.Base" name="@AfterMethod getResult" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod getResult -->
  <testcase classname="com.fliplearn.flipapp.helper.Base" name="@BeforeMethod befo" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod befo -->
  <testcase classname="com.fliplearn.flipapp.testcases.Login" name="@BeforeMethod befMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod befMethod -->
  <testcase classname="com.fliplearn.flipapp.helper.Base" name="@AfterMethod getResult" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod getResult -->
  <testcase classname="com.fliplearn.flipapp.helper.Base" name="@BeforeMethod befo" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod befo -->
  <testcase classname="com.fliplearn.flipapp.testcases.Login" name="@BeforeMethod befMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod befMethod -->
  <testcase classname="com.fliplearn.flipapp.helper.Base" name="@AfterMethod getResult" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod getResult -->
  <testcase classname="com.fliplearn.flipapp.helper.Base" name="@BeforeMethod befo" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod befo -->
  <testcase classname="com.fliplearn.flipapp.testcases.Login" name="@BeforeMethod befMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod befMethod -->
  <testcase classname="com.fliplearn.flipapp.helper.Base" name="@AfterMethod getResult" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod getResult -->
  <testcase classname="com.fliplearn.flipapp.helper.Base" name="@BeforeMethod befo" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod befo -->
  <testcase classname="com.fliplearn.flipapp.testcases.Login" name="@BeforeMethod befMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod befMethod -->
  <testcase classname="com.fliplearn.flipapp.helper.Base" name="@AfterMethod getResult" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod getResult -->
  <testcase classname="com.fliplearn.flipapp.helper.Base" name="@BeforeMethod befo" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod befo -->
  <testcase classname="com.fliplearn.flipapp.testcases.Login" name="@BeforeMethod befMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod befMethod -->
  <testcase classname="com.fliplearn.flipapp.helper.Base" name="@AfterMethod getResult" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod getResult -->
  <testcase classname="com.fliplearn.flipapp.helper.Base" name="@BeforeMethod befo" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod befo -->
  <testcase classname="com.fliplearn.flipapp.testcases.Login" name="@BeforeMethod befMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod befMethod -->
  <testcase classname="com.fliplearn.flipapp.helper.Base" name="@AfterMethod getResult" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod getResult -->
  <testcase classname="com.fliplearn.flipapp.helper.Base" name="@BeforeMethod befo" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod befo -->
  <testcase classname="com.fliplearn.flipapp.testcases.Login" name="@BeforeMethod befMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod befMethod -->
  <testcase classname="com.fliplearn.flipapp.helper.Base" name="@AfterMethod getResult" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod getResult -->
  <testcase classname="com.fliplearn.flipapp.helper.Base" name="@BeforeMethod befo" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod befo -->
  <testcase classname="com.fliplearn.flipapp.testcases.Login" name="@BeforeMethod befMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod befMethod -->
  <testcase classname="com.fliplearn.flipapp.helper.Base" name="@AfterMethod getResult" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod getResult -->
  <testcase classname="com.fliplearn.flipapp.helper.Base" name="@BeforeMethod befo" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod befo -->
  <testcase classname="com.fliplearn.flipapp.testcases.Login" name="@BeforeMethod befMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod befMethod -->
  <testcase classname="com.fliplearn.flipapp.helper.Base" name="@AfterMethod getResult" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod getResult -->
  <testcase classname="com.fliplearn.flipapp.helper.Base" name="@BeforeMethod befo" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod befo -->
  <testcase classname="com.fliplearn.flipapp.testcases.Login" name="@BeforeMethod befMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod befMethod -->
  <testcase classname="com.fliplearn.flipapp.helper.Base" name="@AfterMethod getResult" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod getResult -->
  <testcase classname="com.fliplearn.flipapp.helper.Base" name="@BeforeMethod befo" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod befo -->
  <testcase classname="com.fliplearn.flipapp.testcases.Login" name="@BeforeMethod befMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod befMethod -->
  <testcase classname="com.fliplearn.flipapp.helper.Base" name="@AfterMethod getResult" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod getResult -->
  <testcase classname="com.fliplearn.flipapp.helper.Base" name="@BeforeMethod befo" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod befo -->
  <testcase classname="com.fliplearn.flipapp.testcases.Login" name="@BeforeMethod befMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod befMethod -->
  <testcase classname="com.fliplearn.flipapp.helper.Base" name="@AfterMethod getResult" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod getResult -->
  <testcase classname="com.fliplearn.flipapp.testcases.Login" name="registration" time="0.0">
    <skipped/>
  </testcase> <!-- registration -->
  <testcase classname="com.fliplearn.flipapp.testcases.Login" name="registration" time="0.0">
    <skipped/>
  </testcase> <!-- registration -->
  <testcase classname="com.fliplearn.flipapp.testcases.Login" name="registration" time="0.0">
    <skipped/>
  </testcase> <!-- registration -->
  <testcase classname="com.fliplearn.flipapp.testcases.Login" name="registration" time="0.0">
    <skipped/>
  </testcase> <!-- registration -->
  <testcase classname="com.fliplearn.flipapp.testcases.Login" name="registration" time="0.0">
    <skipped/>
  </testcase> <!-- registration -->
  <testcase classname="com.fliplearn.flipapp.testcases.Login" name="registration" time="0.0">
    <skipped/>
  </testcase> <!-- registration -->
  <testcase classname="com.fliplearn.flipapp.testcases.Login" name="verifyLogin" time="0.0">
    <skipped/>
  </testcase> <!-- verifyLogin -->
  <testcase classname="com.fliplearn.flipapp.testcases.Login" name="verifyLogin" time="0.0">
    <skipped/>
  </testcase> <!-- verifyLogin -->
  <testcase classname="com.fliplearn.flipapp.testcases.Login" name="verifyLogin" time="0.0">
    <skipped/>
  </testcase> <!-- verifyLogin -->
  <testcase classname="com.fliplearn.flipapp.testcases.Login" name="verifyLogin" time="0.0">
    <skipped/>
  </testcase> <!-- verifyLogin -->
  <testcase classname="com.fliplearn.flipapp.testcases.Login" name="verifyLogin" time="0.0">
    <skipped/>
  </testcase> <!-- verifyLogin -->
  <testcase classname="com.fliplearn.flipapp.testcases.Login" name="verifyLogin" time="0.0">
    <skipped/>
  </testcase> <!-- verifyLogin -->
  <testcase classname="com.fliplearn.flipapp.testcases.Login" name="verifyLogout" time="0.0">
    <skipped/>
  </testcase> <!-- verifyLogout -->
  <testcase classname="com.fliplearn.flipapp.testcases.Login" name="verifyLogout" time="0.0">
    <skipped/>
  </testcase> <!-- verifyLogout -->
  <testcase classname="com.fliplearn.flipapp.testcases.Login" name="verifyLogout" time="0.0">
    <skipped/>
  </testcase> <!-- verifyLogout -->
  <testcase classname="com.fliplearn.flipapp.testcases.Login" name="verifyLogout" time="0.0">
    <skipped/>
  </testcase> <!-- verifyLogout -->
  <testcase classname="com.fliplearn.flipapp.testcases.Login" name="verifyLogout" time="0.0">
    <skipped/>
  </testcase> <!-- verifyLogout -->
  <testcase classname="com.fliplearn.flipapp.testcases.Login" name="verifyLogout" time="0.0">
    <skipped/>
  </testcase> <!-- verifyLogout -->
</testsuite> <!-- Default test -->
