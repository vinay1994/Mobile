<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="2" total="7" passed="3" failed="1" skipped="1">
  <reporter-output>
  </reporter-output>
  <suite started-at="2019-07-19T10:32:27Z" name="Fliplearn Automation Suite" finished-at="2019-07-19T10:35:08Z" duration-ms="161049">
    <groups>
    </groups>
    <test started-at="2019-07-19T10:32:27Z" name="Onboarding" finished-at="2019-07-19T10:34:41Z" duration-ms="134120">
      <class name="com.fliplearn.flipapp.testcases.QuizDashboard">
        <test-method is-config="true" signature="befo(org.testng.ITestContext)[pri:0, instance:com.fliplearn.flipapp.testcases.QuizDashboard@a38c7fe]" started-at="2019-07-19T10:32:27Z" name="befo" finished-at="2019-07-19T10:32:39Z" duration-ms="11725" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@5b5f9003]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- befo -->
        <test-method is-config="true" signature="befQuiz()[pri:0, instance:com.fliplearn.flipapp.testcases.QuizDashboard@a38c7fe]" started-at="2019-07-19T10:32:39Z" name="befQuiz" finished-at="2019-07-19T10:32:39Z" duration-ms="256" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- befQuiz -->
        <test-method signature="verifyQuizDashboardClasses(java.lang.String)[pri:0, instance:com.fliplearn.flipapp.testcases.QuizDashboard@a38c7fe]" started-at="2019-07-19T10:32:39Z" name="verifyQuizDashboardClasses" data-provider="staff" finished-at="2019-07-19T10:33:02Z" duration-ms="22734" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Admin]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyQuizDashboardClasses -->
        <test-method is-config="true" signature="getResult()[pri:0, instance:com.fliplearn.flipapp.testcases.QuizDashboard@a38c7fe]" started-at="2019-07-19T10:33:02Z" name="getResult" finished-at="2019-07-19T10:33:02Z" duration-ms="133" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="befo(org.testng.ITestContext)[pri:0, instance:com.fliplearn.flipapp.testcases.QuizDashboard@a38c7fe]" started-at="2019-07-19T10:33:02Z" name="befo" finished-at="2019-07-19T10:33:13Z" duration-ms="10767" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@5b5f9003]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- befo -->
        <test-method is-config="true" signature="befQuiz()[pri:0, instance:com.fliplearn.flipapp.testcases.QuizDashboard@a38c7fe]" started-at="2019-07-19T10:33:13Z" name="befQuiz" finished-at="2019-07-19T10:33:13Z" duration-ms="7" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- befQuiz -->
        <test-method signature="verifyQuizDashboardClasses(java.lang.String)[pri:0, instance:com.fliplearn.flipapp.testcases.QuizDashboard@a38c7fe]" started-at="2019-07-19T10:33:13Z" name="verifyQuizDashboardClasses" data-provider="staff" finished-at="2019-07-19T10:33:35Z" duration-ms="22275" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Principal]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyQuizDashboardClasses -->
        <test-method is-config="true" signature="getResult()[pri:0, instance:com.fliplearn.flipapp.testcases.QuizDashboard@a38c7fe]" started-at="2019-07-19T10:33:36Z" name="getResult" finished-at="2019-07-19T10:33:36Z" duration-ms="134" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="befo(org.testng.ITestContext)[pri:0, instance:com.fliplearn.flipapp.testcases.QuizDashboard@a38c7fe]" started-at="2019-07-19T10:33:36Z" name="befo" finished-at="2019-07-19T10:33:46Z" duration-ms="10468" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@5b5f9003]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- befo -->
        <test-method is-config="true" signature="befQuiz()[pri:0, instance:com.fliplearn.flipapp.testcases.QuizDashboard@a38c7fe]" started-at="2019-07-19T10:33:46Z" name="befQuiz" finished-at="2019-07-19T10:33:47Z" duration-ms="8" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- befQuiz -->
        <test-method signature="verifyQuizDashboardClasses(java.lang.String)[pri:0, instance:com.fliplearn.flipapp.testcases.QuizDashboard@a38c7fe]" started-at="2019-07-19T10:33:47Z" name="verifyQuizDashboardClasses" data-provider="staff" finished-at="2019-07-19T10:34:08Z" duration-ms="21536" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[Teacher]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:568)
at org.testng.Assert.assertEquals(Assert.java:578)
at com.fliplearn.flipapp.testcases.QuizDashboard.verifyQuizDashboardClasses(QuizDashboard.java:123)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyQuizDashboardClasses -->
        <test-method is-config="true" signature="getResult()[pri:0, instance:com.fliplearn.flipapp.testcases.QuizDashboard@a38c7fe]" started-at="2019-07-19T10:34:08Z" name="getResult" finished-at="2019-07-19T10:34:08Z" duration-ms="153" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="befo(org.testng.ITestContext)[pri:0, instance:com.fliplearn.flipapp.testcases.QuizDashboard@a38c7fe]" started-at="2019-07-19T10:34:08Z" name="befo" finished-at="2019-07-19T10:34:19Z" duration-ms="10627" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@5b5f9003]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- befo -->
        <test-method is-config="true" signature="befQuiz()[pri:0, instance:com.fliplearn.flipapp.testcases.QuizDashboard@a38c7fe]" started-at="2019-07-19T10:34:19Z" name="befQuiz" finished-at="2019-07-19T10:34:19Z" duration-ms="8" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- befQuiz -->
        <test-method signature="verifyQuizDashboardClasses(java.lang.String)[pri:0, instance:com.fliplearn.flipapp.testcases.QuizDashboard@a38c7fe]" started-at="2019-07-19T10:34:19Z" name="verifyQuizDashboardClasses" data-provider="staff" finished-at="2019-07-19T10:34:41Z" duration-ms="21739" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[Teacher]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:568)
at org.testng.Assert.assertEquals(Assert.java:578)
at com.fliplearn.flipapp.testcases.QuizDashboard.verifyQuizDashboardClasses(QuizDashboard.java:123)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.retryFailed(Invoker.java:839)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1010)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyQuizDashboardClasses -->
        <test-method is-config="true" signature="getResult()[pri:0, instance:com.fliplearn.flipapp.testcases.QuizDashboard@a38c7fe]" started-at="2019-07-19T10:34:41Z" name="getResult" finished-at="2019-07-19T10:34:41Z" duration-ms="140" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- com.fliplearn.flipapp.testcases.QuizDashboard -->
    </test> <!-- Onboarding -->
    <test started-at="2019-07-19T10:34:42Z" name="Login" finished-at="2019-07-19T10:35:08Z" duration-ms="26535">
      <class name="com.fliplearn.flipapp.testcases.Login">
        <test-method is-config="true" signature="befo(org.testng.ITestContext)[pri:0, instance:com.fliplearn.flipapp.testcases.Login@f0c8a99]" started-at="2019-07-19T10:34:42Z" name="befo" finished-at="2019-07-19T10:34:54Z" duration-ms="11987" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@7c11d32]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- befo -->
        <test-method is-config="true" signature="befMethod()[pri:0, instance:com.fliplearn.flipapp.testcases.Login@f0c8a99]" started-at="2019-07-19T10:34:54Z" name="befMethod" finished-at="2019-07-19T10:34:54Z" duration-ms="23" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- befMethod -->
        <test-method signature="verifyLogin()[pri:0, instance:com.fliplearn.flipapp.testcases.Login@f0c8a99]" started-at="2019-07-19T10:34:54Z" name="verifyLogin" finished-at="2019-07-19T10:35:07Z" duration-ms="13606" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLogin -->
        <test-method is-config="true" signature="getResult()[pri:0, instance:com.fliplearn.flipapp.testcases.Login@f0c8a99]" started-at="2019-07-19T10:35:08Z" name="getResult" finished-at="2019-07-19T10:35:08Z" duration-ms="130" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="aftSuite()[pri:0, instance:com.fliplearn.flipapp.testcases.Login@f0c8a99]" started-at="2019-07-19T10:35:08Z" name="aftSuite" finished-at="2019-07-19T10:35:08Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftSuite -->
      </class> <!-- com.fliplearn.flipapp.testcases.Login -->
    </test> <!-- Login -->
  </suite> <!-- Fliplearn Automation Suite -->
</testng-results>
